import 'package:flutter/material.dart';
import 'package:speech_box/scanning_keyboard_screen.dart';
import 'package:speech_box/suggestion_button_widget.dart';

class Suggestions extends StatefulWidget {
  final String filterValue;
  final VoidStringCallBack onSelect;

  Suggestions(this.filterValue, this.onSelect);

  @override
  _SuggestionsState createState() => _SuggestionsState();
}

class _SuggestionsState extends State<Suggestions> {
  List<String> words = [
    "Werken ",
    "vragen",
    "leren",
    "sms'en",
    "vraag",
    "waar",
    "waarom",
    "wanneer",
    "wat",
    "hoe",
    "geld",
    "bank",
    "portefeuille",
    "televisie",
    "radio",
    "beloofd",
    "centrum",
    "home",
    "school",
    "fiche",
    "kalender",
    "cd-speler",
    "oppompen",
    "kinezaal",
    "mat",
    "rol",
    "gang",
    "telefoon",
    "hand",
    "hemd",
    "knoop",
    "straat",
    "dorp",
    "stad",
    "20",
    "30",
    "40",
    "50",
    "60",
    "toekomst",
    "valies",
    "deken",
    "voet",
    "koelkast",
    "uurwerk",
    "keuken",
    "idee",
    "0",
    "80",
    "1001000",
    "2000",
    "5000",
    "handicap",
    "zomer",
    "herfst",
    "winter",
    "lente",
    "draad",
    "test",
    "ik",
    "moeder",
    "nonkel",
    "vrouw",
    "nichtje",
    "leraar",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "opvoedster",
    "verpleging",
    "familie",
    "dokter",
    "groep",
    "zanger",
    "minuut",
    "kwartier",
    "gisteren",
    "vandaag",
    "morgen",
    "uur",
    "het",
    "de",
    "wie",
    "hoeveel",
    "welke",
    "spreken",
    "Voetplank",
    "middagmaal",
    "patat",
    "rijst",
    "frieten",
    "soep",
    "vlees",
    "groente",
    "saus",
    "lichaam",
    "hoofd",
    "nek",
    "schouder",
    "rug",
    "arm",
    "fruit",
    "pols",
    "dessert",
    "chocolade",
    "drank",
    "plat water",
    "water",
    "fruitsap",
    "koffie",
    "melk",
    "beker",
    "lepel ",
    "servet",
    "buik",
    "been",
    "zoon",
    "dochter",
    "kind",
    "baby",
    "helper",
    "wit",
    "zwart",
    "rood",
    "geel",
    "groen",
    "blauw",
    "lezen",
    "Feesten",
    "weggaan",
    "lachen",
    "ergo",
    "kine'",
    "logo",
    "uitdoen",
    "bruin",
    "grijs",
    "zondag",
    "maandag",
    "dinsdag",
    "Woensdag",
    "schrijven",
    "zetten",
    "blijven",
    "wenen",
    "troosten",
    "plagen",
    "vinden",
    "aandoen",
    "donderdag",
    "Vrijdag",
    "zaterdag",
    "januari",
    "februari",
    "maart",
    "wassen",
    "afvegen",
    "scheren",
    "wachten",
    "denken",
    "Willen",
    "gebruiken",
    "april",
    "mei",
    "juni",
    "juli",
    "augustus",
    "september",
    "brengen",
    "halen",
    "geloven",
    "duwen",
    "nadenken",
    "display",
    "betalen",
    "oktober",
    "november",
    "december",
    "tegenovergestelde",
    "koekje",
    "snoepje",
    "vis",
    "spaghetti",
    "sla",
    "appelsien",
    "banaan",
    "aardbei",
    "ja",
    "neen",
    "a.u.b",
    "hallo",
    "ijsje",
    "milkshake",
    "yochert",
    "bier",
    "cola",
    "chocomelk",
    "knie",
    "pannekoek",
    "haar",
    "hersenen",
    "hand",
    "vinger",
    "voet",
    "jas",
    "muts",
    "schoen",
    "kousen",
    "onderbroek",
    "pamper",
    "onderhemd",
    "teen",
    "proficiat",
    "sorry",
    "sjaal",
    "handschoen",
    "pyjama",
    "huis",
    "thuis",
    "lift",
    "geduld",
    "niet",
    "uitstapje",
    "cafe'",
    "park",
    "bos",
    "regen",
    "strand",
    "nieuws",
    "verleden",
    "votbaluitslagen",
    "vakantie",
    "foto",
    "bezoek",
    "zee",
    "muziek",
    "een",
    "en",
    "nu",
    "slaapkamer",
    "living",
    "zetel",
    "badkamer",
    "zwembad",
    "eetkamer",
    "voetbal",
    "goed",
    "voertuig",
    "auto",
    "bus",
    "taxi",
    "trein",
    "vliegtuig",
    "vroeg",
    "duwrolwagen",
    "elektrische wagen",
    "sluiting",
    "wiel",
    "batterij",
    "besturing",
    "veel",
    "hard",
    "vlug",
    "laat",
    "sleutel",
    "spraakcomputer",
    "verjaardag",
    "geschenk",
    "voedsel",
    "boter",
    "ontbijt",
    "boterham",
    "brood",
    "chocopasta",
    "confituur",
    "kaas",
    "kleding",
    "riem",
    "pull",
  ];

  List<String> sentences = [
    "Tanden poetsen aub",
    "tot ziens",
    "ik begrijp je niet",
    "gelukkig verjaardag",
    "hoe laat is het",
    "hoe laat moet ik er zijn?",
    "ik kan het niet zeggen",
    "hoe gaat het?",
    "ik ben verkeerd ",
    "gelukkig nieuwjaar! ",
    "zeg het nog eens aub! ",
    "zet me eens recht aub?",
    "wil je mijn tas nemen aub?",
    "Het spijt me. ",
    "ik ben Geert",
    "ik woon in.",
    "yo de mannen! ",
    "ik wil iets zeggen.",
    "ik vind dat mooi. ",
    "ik vind dat vriendelijk",
    "ik heb dorst!",
    "ik ben ziek!",
    "ik ben jaloers. ",
    "ik ben kwaad",
    "ik ben angstig",
    "ik ben moe. ",
    "ik ben klaar",
    "het is zoet",
    "het is zout",
    "het is lekker",
    "het is droog",
    "kan je dat open doen",
    "het is te luid",
    "dat is slecht",
    "het is nat",
    "kan je dat dichtdoen? ",
    "kraagje goed steken aub!",
    "pullover goed aandoen",
    "Wil je me helpen?",
    "ik kan",
    "ik maak",
    "ik wil gaan winkelen",
    "ik wil rijden",
    "ik voel",
    "blijf eraf",
    "ik wil oefenen",
    "wil je dit vastmaken?",
    "ik bgrijp het",
    "ik probeer",
    "ik weet het",
    "je doet me pijn",
    "ik ben ongerust",
    "ik amuseer me",
    "ik geniet",
    "ik ben blij",
    "ik ben trots",
    "ik heb honger",
    "ik heb pijn",
    "het is kapot",
    "ik ben bang",
    "ik wil naar de wc",
    "mo vent toch! ",
    "ik wil eten",
    "ik heb",
    "half uur",
    "ik word",
    "ik hoor",
    "ik ruik",
    "ik wil gaan wandelen",
    "ik wil tv kijken",
    "ik wil drinken",
    "ik ben",
    "ik kijk",
  ];

  List<String> suggestions = List<String>();

  @override
  void initState() {
    super.initState();

    suggestions.addAll(words);
    suggestions.addAll(sentences);
  }

  @override
  Widget build(BuildContext context) {
    List<String> filteredSuggestions = List.from(suggestions);

    int _lastSpaceIndex = widget.filterValue.lastIndexOf(" ") == -1
        ? 0
        : widget.filterValue.lastIndexOf(" ");

    String _searchValue = widget.filterValue
        .substring(_lastSpaceIndex, widget.filterValue.length)
        .trim();

    filteredSuggestions.retainWhere(
        (item) => item.toLowerCase().startsWith(_searchValue.toLowerCase()));

    return ListView.builder(
        itemCount: filteredSuggestions.length,
        scrollDirection: Axis.horizontal,
        itemBuilder: (context, index) {
          return Padding(
            padding: const EdgeInsets.all(6.0),
            child: SuggestionButton(
              displayValue: filteredSuggestions[index],
              value: filteredSuggestions[index],
              pressed: widget.onSelect,
              width: 200.0,
            ),
          );
        });
  }
}
